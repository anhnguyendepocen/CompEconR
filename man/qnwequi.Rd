% Generated by roxygen2 (4.0.2): do not edit by hand
\name{qnwequi}
\alias{qnwequi}
\title{Quadrature nodes and weights using equidistributed nodes.}
\usage{
qnwequi(n, a = matrix(0, 1, length(n)), b = matrix(1, 1, length(n)),
  type = "N", equidist_pp = sqrt(primes(7920)))
}
\arguments{
\item{n}{total number of nodes}

\item{a}{1.d left endpoints}

\item{b}{1.d right endpoints}

\item{type}{string, type of sequence. Choose from:
\itemize{
   \item 'N' - Neiderreiter (default)
   \item 'W' - Weyl
   \item 'H' - Haber
   \item 'R' - pseudo Random
   }}
}
\value{
List with fields
 \itemize{
     \item \code{xpoints} n.d quadrature nodes
     \item \code{weights} n.1 quadrature weights
     }
}
\description{
Generates equidistributed nodes for computing the definite integral of
  a real-valued function defined on a hypercube [a,b] in R^d.
}
\examples{
# To compute definte integral of a real-valued function f defined on a hypercube
# [a,b] in R^d, write a function f that returns an m.1 vector when passed an
# m.d matrix, and write
q <- qnwequi(n,a,b,type);
Intf <- crossprod(q$w, f(q$x))

# Alternatively, use the quadrature function
Intf <- quadrature(f,qnwnequi,n,a,b,type)
}
\author{
Randall Romero-Aguilar, based on Miranda & Fackler's CompEcon toolbox
}
\references{
Miranda, Fackler 2002 Applied Computational Economics and Finance
}
\seealso{
Other quadrature functions: \code{\link{qnwlege}};
  \code{\link{qnwlogn}}; \code{\link{qnwnorm}};
  \code{\link{qnwsimp}}; \code{\link{qnwtrap}};
  \code{\link{qnwunif}}; \code{\link{quadrature}}
}
\keyword{quadrature}

