% Generated by roxygen2 (4.0.2): do not edit by hand
\name{broyden}
\alias{broyden}
\title{Computes root of function via Broyden's Inverse Update Method}
\usage{
broyden(f, x, ..., opt = list(tol = sqrt(.Machine$double.eps), maxit = 100,
  maxsteps = 25, initb = NULL, initi = FALSE, showiters = FALSE))
}
\arguments{
\item{f}{function, R^d --> R^d}

\item{x}{d-array, initial guess for root}

\item{...}{additional arguments to pass to \code{f}}

\item{opt}{list, options to control rootfinding process
\itemize{
   \item \code{tol} convergence tolerance
   \item \code{maxit} maximum number of iterations
   \item \code{maxsteps} maximum number of backsteps
   \item \code{initb} an initial inverse Jacobian approximation matrix
   \item \code{initi} if initb is empty, use the identity matrix to initialize (
       if FALSE, a numerical Jacobian will be used)
   \item \code{showiters} display results of each iteration if TRUE
   }}
}
\value{
A list with fields
   \itemize{
       \item \code{x}    d-array, root of f
       \item \code{fval} d-array, value of \code{f} at solution
       \item \code{fjacinv} d.d matrix, inverse of Jacobian estimate
   }
}
\description{
Computes root of function via Broyden's Inverse Update Method
}
\examples{
broyden(function(x) (x-2)^3, 4)
broyden(function(x) (x-2)^3, 3, opt = list(showiters=TRUE))

# Compute fixedpoint of f(x1,x2)= [x1^2 + x2^3;   x1*x2 - 0.5]
# Initial values [x1,x2] = [-1,-1].  True fixedpoint is x1 = -(1/8)^(1/5),  x2 = 1/(2*x1).
broyden(function(x) c(x[1]^2 + x[2]^3, x[1]*x[2] - 0.5), c(-1,-1))
}
\author{
Randall Romero-Aguilar, based on Miranda & Fackler's CompEcon toolbox
}
\references{
Miranda, Fackler 2002 Applied Computational Economics and Finance
}

